--Create the table in preparation to import into Postgres database

In us_counties_2010, each race and household data column contains a
census code. The census codes are given under the column name while their assigned races
is listed under description.

Column name -  Description
p0010001 	- Total population
p0010002 	- Population of one race
p0010003 	- Population of one race: White alone
p0010004 	- Population of one race: Black or African American alone
p0010005 	- Population of one race: American Indian and Alaska Native alone
p0010006 	- Population of one race: Asian alone
p0010007 	- Population of one race: Native Hawaiian and Other Pacific
Islander alone
p0010008 	- Population of one race: Some Other Race alone

CREATE TABLE us_counties_2010 (
name varchar(90),
stusab varchar(2),
sumlev varchar(3),
region smallint,
division smallint,
state varchar(2),
county varchar(3),
arealand bigint,
areawatr bigint,
pop100 integer,
hu100 integer,
intptlat numeric(10,7),
intptlon numeric(10,7),
p0010001 integer,
p0010002 integer,
p0010003 integer,
p0010004 integer,
p0010005 integer,
P0010006 integer,
P0010007 integer,	
P0010008 integer,	
P0010009 integer,	
P0010010 integer,	
P0010011 integer,	
P0010012 integer,	
P0010013 integer,	
P0010014 integer,	
P0010015 integer,	
P0010016 integer,	
P0010017 integer,
P0010018 integer,	
P0010019 integer,	
P0010020 integer,
P0010021 integer,	
P0010022 integer,	
P0010023 integer,	
P0010024 integer,	
P0010025 integer,
P0010026 integer,	
P0010047 integer,	
P0010063 integer,	
P0010070 integer,	
P0020001 integer,	
P0020002 integer,	
P0020003 integer,	
P0020004 integer,	
P0020005 integer,	
P0020006 integer,
P0020007 integer,	
P0020008 integer,	
P0020009 integer,	
P0020010 integer,	
P0020011 integer,	
P0020012 integer,	
P0020028 integer,	
P0020049 integer,	
P0020065 integer,	
P0020072 integer,	
P0030001 integer,	
P0030002 integer,	
P0030003 integer,	
P0030004 integer,	
P0030005 integer,	
P0030006 integer,	
P0030007 integer,	
P0030008 integer,	
P0030009 integer,	
P0030010 integer,	
P0030026 integer,	
P0030047 integer,	
P0030063 integer,	
P0030070 integer,	
P0040001 integer,	
P0040002 integer,	
P0040003 integer,	
P0040004 integer,	
P0040005 integer,	
P0040006 integer,	
P0040007 integer,	
P0040008 integer,	
P0040009 integer,	
P0040010 integer,	
P0040011 integer,	
P0040012 integer,	
P0040028 integer,
p0040049 integer,
p0040065 integer,
p0040072 integer,
h0010001 integer,
h0010002 integer,
h0010003 integer
);

--Import table into datase with Postgres IMPORT function

--Visually inspect the imported table

SELECT * 
FROM us_counties_2010;

--Find the 10 counties with the largest land areas

SELECT name, 
	stusab, 
	arealand
FROM us_counties_2010
ORDER BY arealand DESC
LIMIT 10;

--using the AS keyword to clarify the census codes with proper names

SELECT NAME,
STUSAB AS "st",
p0010001 AS "Total Population",
p0010003 AS "White Alone",
p0010004 AS "Black or African American Alone",
p0010005 AS "Am Indian/Alaska Native Alone",
p0010006 AS "Asian Alone",
p0010007 AS "Native Hawaiian and Other Pacific Islander Alone",
p0010008 AS "Some Other Race Alone",
p0010009 AS "Two or More Races"
FROM us_counties_2010;

--Find the toal number of white alone, black alone and total white and black population

SELECT NAME,
STUSAB AS "st",
p0010003 AS "White Alone",
p0010004 AS "Black Alone",
p0010003 + p0010004 AS "Total White and Black"
FROM us_counties_2010;

--Find out if the total population corresponds to the sum of all the races

SELECT NAME,
STUSAB AS "st",
p0010001 AS "Total",
p0010003 + p0010004 + p0010005 + p0010006 + p0010007
+ p0010008 + p0010009 AS "All Races",
(p0010003 + p0010004 + p0010005 + p0010006 + p0010007
+ p0010008 + p0010009) - p0010001 AS "Difference"
FROM us_counties_2010
ORDER BY "Difference" DESC;

--find out the counties with highest pecentage of blacks.
--cast is used to convert the integer types to numeric for decimals

SELECT name,
stusab AS "st",
(CAST (p0010004 AS numeric(8,1)) / p0010001) * 100 AS "percentage_black"
FROM us_counties_2010
ORDER BY "percentage_black" desc;

--finding the average population of the counties;round removes the decimals
--Agreggate functions done. The 50th percentile is used as median
--it is ordered by the county total to get an accurate median

SELECT sum(p0010001) AS "county_sum",
		round(avg(p0010001),0) AS "county-avg",
		percentile_cont(.5)
		WITHIN GROUP (order by p0010001) as "County_median"
FROM us_counties_2010;

--use a subquery to find the counties population in the top 10th percentile

SELECT name,
stusab,
p0010001 as "top 10 percentile total"
FROM us_counties_2010
where p0010001 >=
(SELECT percentile_cont(.9)
within group (order by p0010001)
FROM us_counties_2010)
order by "top 10 percentile total" DESC;

--Finding the top 5 states with the largest county populations (>100000)

SELECT stusab, count(*)
FROM us_counties_2010
WHERE p0010001 >= 100000
GROUP BY stusab
ORDER BY count(*) DESC
LIMIT 5;
